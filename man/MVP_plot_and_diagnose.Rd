% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_R6_class_bbb_plot_and_diagnose.R
\name{MVP_plot_and_diagnose}
\alias{MVP_plot_and_diagnose}
\title{MVP extract and plot Class}
\description{
Class for handling MVP model summaries, samples (trace) and diagnostics.
}
\details{
This class is called via the main "MVP_model" R6 class.
}
\section{Model Types}{

\itemize{
\item MVP: Multivariate probit model
\item LC-MVP: Latent class multivariate probit model
\item latent_trait: Latent trait model
\item Stan: User-supplied Stan models (files extension must be .stan).
}
}

\section{Class Relationship}{

This class is not meant to be instantiated/called directly by users. Instead, it is created
and returned by the MVP_model$summary() method. It provides methods for:
\itemize{
\item Extracting MCMC diagnostics (divergences, ESS, etc.)
\item Creating trace and density plots
\item Computing efficiency metrics
\item Accessing posterior draws in various formats
}
}

\section{Common Usage Patterns}{

\describe{
\item{Basic Diagnostics}{get_divergences() -> get_efficiency_metrics()}
\item{Parameter Summaries}{get_summary_main() -> get_summary_transformed()}
\item{Visualization}{plot_traces() -> plot_densities()}
\item{Custom Analysis}{get_posterior_draws() -> Your analysis}
}
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{summary_object}}{The summary object, obtained from the main "MVP_model" R6 class.}

\item{\code{init_object}}{Initialization object, obtained from the main "MVP_model" R6 class.}

\item{\code{n_nuisance}}{The total number of nuisance parameters, please see the "MVP_model" R6 class documentation for more details.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MVP_plot_and_diagnose-new}{\code{MVP_plot_and_diagnose$new()}}
\item \href{#method-MVP_plot_and_diagnose-get_divergences}{\code{MVP_plot_and_diagnose$get_divergences()}}
\item \href{#method-MVP_plot_and_diagnose-get_summary_main}{\code{MVP_plot_and_diagnose$get_summary_main()}}
\item \href{#method-MVP_plot_and_diagnose-get_summary_transformed}{\code{MVP_plot_and_diagnose$get_summary_transformed()}}
\item \href{#method-MVP_plot_and_diagnose-get_summary_generated_quantities}{\code{MVP_plot_and_diagnose$get_summary_generated_quantities()}}
\item \href{#method-MVP_plot_and_diagnose-get_posterior_draws}{\code{MVP_plot_and_diagnose$get_posterior_draws()}}
\item \href{#method-MVP_plot_and_diagnose-get_all_traces}{\code{MVP_plot_and_diagnose$get_all_traces()}}
\item \href{#method-MVP_plot_and_diagnose-get_log_lik_trace}{\code{MVP_plot_and_diagnose$get_log_lik_trace()}}
\item \href{#method-MVP_plot_and_diagnose-get_nuisance_trace}{\code{MVP_plot_and_diagnose$get_nuisance_trace()}}
\item \href{#method-MVP_plot_and_diagnose-get_posterior_draws_as_tibbles}{\code{MVP_plot_and_diagnose$get_posterior_draws_as_tibbles()}}
\item \href{#method-MVP_plot_and_diagnose-get_efficiency_metrics}{\code{MVP_plot_and_diagnose$get_efficiency_metrics()}}
\item \href{#method-MVP_plot_and_diagnose-get_HMC_info}{\code{MVP_plot_and_diagnose$get_HMC_info()}}
\item \href{#method-MVP_plot_and_diagnose-time_to_target_ESS}{\code{MVP_plot_and_diagnose$time_to_target_ESS()}}
\item \href{#method-MVP_plot_and_diagnose-iter_to_target_ESS}{\code{MVP_plot_and_diagnose$iter_to_target_ESS()}}
\item \href{#method-MVP_plot_and_diagnose-plot_traces}{\code{MVP_plot_and_diagnose$plot_traces()}}
\item \href{#method-MVP_plot_and_diagnose-plot_densities}{\code{MVP_plot_and_diagnose$plot_densities()}}
\item \href{#method-MVP_plot_and_diagnose-clone}{\code{MVP_plot_and_diagnose$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-new"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$new(model_summary, init_object, n_nuisance)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_summary}}{The summary object, obtained from the main "MVP_model" R6 class.}

\item{\code{init_object}}{The Initialization object, obtained from the main "MVP_model" R6 class.}

\item{\code{n_nuisance}}{The total number of nuisance parameters, please see the "MVP_model" R6 class documentation for more details.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_divergences"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_divergences}{}}}
\subsection{Method \code{get_divergences()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_divergences()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns self$summary_object$summaries$divergences obtained from the main "MVP_model" R6 class.
self$summary_object$summaries$divergences contains divergence information (e.g. \% of transitions which
diverged).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_summary_main"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_summary_main}{}}}
\subsection{Method \code{get_summary_main()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_summary_main()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns main parameter summaries as a tibble.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_summary_transformed"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_summary_transformed}{}}}
\subsection{Method \code{get_summary_transformed()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_summary_transformed()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns transformed parameter summaries as a tibble.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_summary_generated_quantities"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_summary_generated_quantities}{}}}
\subsection{Method \code{get_summary_generated_quantities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_summary_generated_quantities()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns generated quantities as a tibble.
Convenience method for posterior draws (as 3D arrays)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_posterior_draws"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_posterior_draws}{}}}
\subsection{Method \code{get_posterior_draws()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_posterior_draws()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns posterior draws as a 3D array (iterations, chains, parameters).
Convenience method for all traces (as 3D arrays)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_all_traces"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_all_traces}{}}}
\subsection{Method \code{get_all_traces()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_all_traces()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns posterior traces as a 3D arrays (iterations, chains, parameters).
Convenience method for posterior draws for log_lik (as 3D arrays)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_log_lik_trace"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_log_lik_trace}{}}}
\subsection{Method \code{get_log_lik_trace()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_log_lik_trace()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns posterior draws for log_lik as a 3D array (iterations, chains, parameters).
Convenience method for posterior draws for nuisance (as 3D arrays)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_nuisance_trace"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_nuisance_trace}{}}}
\subsection{Method \code{get_nuisance_trace()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_nuisance_trace()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns posterior draws for nuisance as a 3D array (iterations, chains, parameters).
Convenience method for posterior draws (as tibbles)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_posterior_draws_as_tibbles"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_posterior_draws_as_tibbles}{}}}
\subsection{Method \code{get_posterior_draws_as_tibbles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_posterior_draws_as_tibbles()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns trace as tibbles. The trace gets returned as 3 seperate tibbles (one tibble for the
main parameters, one for the transformed parameters, and one for generated quantities).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_efficiency_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_efficiency_metrics}{}}}
\subsection{Method \code{get_efficiency_metrics()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_efficiency_metrics()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a list containing efficiency metrics including:
\itemize{
\item time_burnin: Time spent in burnin phase
\item time_sampling: Time spent sampling
\item time_total_MCMC: Total time spent doing MCMC/HMC sampling, excluding time to compute summaries and diagnostics.
\item time_total_inc_summaries: Total time spent doing MCMC/HMC sampling, including time to compute summaries and diagnostics.
\item Min_ESS_main: The minimum ESS of the main model parameters.
\item Min_ESS_per_sec_sampling: The minimum ESS per second for the sampling phase.
\item Min_ESS_per_sec_total: The minimum ESS per second for the total model run time, including any time spent computing
summaries and diagnostics.
\item Min_ESS_per_grad_sampling:  The minimum ESS per gradient evaluation for the sampling phase.
\item grad_evals_per_sec: The number of gradient evaluations performed per second.
\item est_time_to_100_ESS_sampling: The estimated sampling time to reach a minimum ESS of 100.
\item est_time_to_1000_ESS_sampling: The estimated sampling time to reach a minimum ESS of 1000.
\item est_time_to_10000_ESS_sampling: The estimated sampling time to reach a minimum ESS of 10,000.
\item est_time_to_100_ESS_wo_summaries: The estimated total time (expluding time to compute model summaries and diagnostics)
to reach a minimum ESS of 100.
\item est_time_to_1000_ESS_wo_summaries: The estimated total time (expluding time to compute model summaries and diagnostics)
to reach a minimum ESS of 1000.
\item est_time_to_10000_ESS_wo_summaries: The estimated total time (expluding time to compute model summaries and diagnostics)
to reach a minimum ESS of 10,000.
\item est_time_to_100_ESS_inc_summaries: The estimated total time (including time spent computing model summaries and
diagnostics) to reach a minimum ESS of 100.
\item est_time_to_1000_ESS_inc_summaries: The estimated total time (including time spent computing model summaries and
diagnostics) to reach a minimum ESS of 1000.
\item est_time_to_10000_ESS_inc_summaries: The estimated total time (including time spent computing model summaries and
diagnostics) to reach a minimum ESS of 10,000.
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-get_HMC_info"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-get_HMC_info}{}}}
\subsection{Method \code{get_HMC_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$get_HMC_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a list containing HMC algorithm metrics including:
\itemize{
\item tau_main: The HMC path length (\eqn{\tau}) for sampling the main parameters.
\item eps_main: The HMC step-size (\eqn{\epsilon}) for sampling the main parameters.
\item tau_us: The HMC path length (\eqn{\tau}) for sampling the nuisance parameters.
\item eps_us: The HMC step-size (\eqn{\epsilon}) for sampling the nuisance parameters.
\item n_chains_sampling: The number of parallel chains used during the sampling phase.
\item n_chains_burnin: The number of parallel chains used during the burnin phase.
\item n_iter: The number of iterations used during the sampling phase.
\item n_burnin:  The number of iterations used during the burnin phase.
\item LR_main: The ADAM learning rate (main parameters).
\item LR_us:  The ADAM learning rate (nuisance parameters).
\item adapt_delta: The target Metropolis-Hastings acceptance probability.
\item metric_type_main: The type of HMC metric used for main parameters (Hessian or Empirical).
\item metric_shape_main: The shape of HMC metric used for main parameters (dense or diag).
\item metric_type_nuisance: The type of HMC metric used for the nuisance parameters (Hessian or Empirical).
\item metric_shape_nuisance: The shape of HMC metric used for the nuisance parameters (dense or diag).
\item diffusion_HMC: Whether diffusion HMC was used to sample the nuisance parameters or not.
\item partitioned_HMC: Whether partitioned HMC was used or not (if \code{FALSE}, then parameters were sampled all
at once, and if \code{TRUE}, then the nuisance are sampled conditional on the main parameters).
\item n_superchains: The number of superchains.
\item interval_width_main: The interval width for the main parameters. The metric is computed at the end of
each interval.
\item interval_width_nuisance: The interval width for the nuisance parameters. The metric is computed at the end of
each interval.
\item force_autodiff: Whether autodiff was used (forced) - only relevant for built-in models, as Stan models always
use autodiff.
\item force_PartialLog: Whether a partial-log-scale version of the model was used (forced) - only relevant
for built-in models.
\item multi_attempts: Whether multiple attempts were made when evaluating the lp_grad function (i.e. first try normal param.,
then partial-log-scale, and finally autodiff + partial-log-scale) - only relevant for built-in models.
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-time_to_target_ESS"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-time_to_target_ESS}{}}}
\subsection{Method \code{time_to_target_ESS()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$time_to_target_ESS(target_ESS)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{target_ESS}}{The target ESS.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a list called "target_ESS_times" which contains the estimated sampling time to reach the target ESS
("sampling_time_to_target_ESS"), the estimated total time excluding the time it takes to compute model summaries
("total_time_to_target_ESS_wo_summaries"), and the total estimated time to reach the
target ESS ("total_time_to_target_ESS_with_summaries").
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-iter_to_target_ESS"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-iter_to_target_ESS}{}}}
\subsection{Method \code{iter_to_target_ESS()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$iter_to_target_ESS(target_ESS)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{target_ESS}}{The target ESS.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a list called "target_ESS_iter" which contains the estimated number of sampling iterations (n_iter) to
reach the target ESS ("sampling_iter_to_target_ESS").
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-plot_traces"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-plot_traces}{}}}
\subsection{Method \code{plot_traces()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$plot_traces(params = NULL, batch_size = 9)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{The parameters to generate trace plots for. This is a character vector - e.g. to plot trace plots for
beta: params = c("beta").
The default is NULL and the trace plots for all model parameters (which have a trace array) will be plotted.}

\item{\code{batch_size}}{The number of trace plots to display per panel. Default is 9.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
If no parameters specified (i.e. params = NULL), then this will return an object containing the trace plots for all
model parameters  which have a trace array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-plot_densities"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-plot_densities}{}}}
\subsection{Method \code{plot_densities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$plot_densities(params = NULL, batch_size = 9)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{The parameters to generate posterior density plots for. This is a character vector - e.g. to plot the
posterior density plots for beta: params = c("beta").
The default is NULL and the posterior density plots for all model parameters (which have a trace array) will be plotted.}

\item{\code{batch_size}}{The number of posterior density plots to display per panel. Default is 9.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
If no parameters specified (i.e. params = NULL), then this will return an object containing the posterior density
plots for all model parameters which have a trace array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MVP_plot_and_diagnose-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MVP_plot_and_diagnose-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MVP_plot_and_diagnose$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
